# TuneScene - Project Dependencies (Windows + npm) 
# Fichier: app.dependencies

[OBLIGATOIRES]

1) FFmpeg (préviews/vidéo)
   - Installation (PowerShell) :
     winget install --id Gyan.FFmpeg -e
     # Puis fermer/réouvrir le terminal
     ffmpeg -version  # vérification

2) Base de données Postgres (choisir UNE option)
   Option A — Base distante (Neon/Supabase/RDS) :
     - Crée un compte Neon ou Supabase
     - Récupère l’URL et mets-la dans .env :
       POSTGRES_URL=postgresql://USER:PASS@HOST/DB?sslmode=require
     - Synchroniser le schéma :
       npm run db:push

   Option B — Postgres local (installateur Windows) :
     - Télécharge Postgres depuis postgresql.org (version 16+)
     - Vérifie :
       psql --version
     - Dans .env :
       POSTGRES_URL=postgres://postgres:postgres@localhost:5432/tunescene
     - Créer la base (si nécessaire) :
       psql -U postgres -c "CREATE DATABASE tunescene;"
     - Synchroniser le schéma :
       npm run db:push

3) Dépendances Node du projet (npm uniquement)
   - À la racine du repo :
     npm ci
     # (si npm ci échoue)
     npm install


[OPTIONNELS — UNIQUEMENT SI TON APP LES UTILISE]

4) Redis (queues/travaux asynchrones)
   - Si non utilisé, ignorer.
   - Local via Docker (si Docker Desktop installé) :
     docker run -d -p 6379:6379 --name redis redis:7
   - Dans .env :
     REDIS_URL=redis://localhost:6379

5) Stripe CLI (tests webhook)
   - Installer :
     winget install --id Stripe.StripeCLI -e
     stripe --version
   - Écouter en local :
     stripe login
     stripe listen --forward-to http://localhost:3000/api/webhooks/stripe

6) Clés/API (pas des logiciels, mais nécessaires si ces features existent)
   - Better Auth :
     AUTH_SECRET=           # génère une clé aléatoire
   - Google OAuth :
     GOOGLE_CLIENT_ID=
     GOOGLE_CLIENT_SECRET=
   - OpenAI (si chat/AI) :
     OPENAI_API_KEY=
     OPENAI_MODEL=gpt-5-mini
   - (Plus tard vidéo) :
     RUNWAY_API_KEY=
     PIKA_API_KEY=
     KAIBER_API_KEY=
     KLING_API_KEY=
     HEYGEN_API_KEY=
     DID_API_KEY=
   - Storage (si uploads) :
     R2_ACCOUNT_ID=
     R2_ACCESS_KEY_ID=
     R2_SECRET_ACCESS_KEY=
     R2_BUCKET=tunescene


[COMMANDES CLÉS — RÉCAP]

# Déverrouiller PowerShell (si scripts bloqués)
Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass

# Dépendances Node
npm ci

# DB (au choix suivant ta config)
npm run db:push
# (ou, si tu gères des migrations versionnées)
# npm run db:migrate

# Dev server
npm run dev

# Vérifications utiles
npm ls --depth=0
ffmpeg -version
# (si Docker Redis choisi)
docker ps
